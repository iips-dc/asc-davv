
<meta charset="utf-8">
<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  position: relative;
  width: 960px;
}


#tooltip {
position: absolute;
width: 220px;
height: auto;
padding: 10px;
background-color: white;
-webkit-border-radius: 10px;
-moz-border-radius: 10px;
border-radius: 10px;
-webkit-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
-moz-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
pointer-events: none;
}
 
#tooltip.hidden {
display: none;
}
 
#tooltip p {
margin: 0;
font-family: sans-serif;
font-size: 16px;
line-height: 20px;
}
.axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
  fill-opacity: .9;
}

.bar:hover {
  fill: #F9FF05 ;
}S
.x.axis path {
  display: none;
}

label {
  position: absolute;
  top: 10px;
  right: 10px;
}

</style>
<label><input type="checkbox"> Sort values</label>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 50, left: 40},
    width = 900 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;



var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1, 1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
 

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.json("feedbacks.json", function(error, data) {

  data.forEach(function(d) {
    d.frequency = +d.frequency;
  });

  x.domain(data.map(function(d) { return d.person_name; }));
  y.domain([0, d3.max(data, function(d) { return ((d.communication_skill +d.competency_subject+d.quality_lecture +d.usefulness_topic)/(d.tr*4)); })]);



  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Average Score");

   svg.append("text")
        .attr("x", (width / 2))             
        .attr("y",  (margin.bottom / 3))
        .attr("text-anchor", "middle")  
        .style("font-size", "16px") 
        .style("padding", "16px 16px 16px 16px") 
        .style("text-decoration", "underline")  
        
        ;
  svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        .selectAll("text")  
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", ".751em")
            .attr("transform", function(d) {
                return "rotate(-65)" 
                });

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.person_name); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y((d.communication_skill +d.competency_subject+d.quality_lecture +d.usefulness_topic)/(d.tr*4)); })
      .attr("height", function(d) { return height - y((d.communication_skill +d.competency_subject+d.quality_lecture +d.usefulness_topic)/(d.tr*4)); })

      .on("mouseover", function(d) {
d3.select(this)
.attr("fill", "");
 
//Get this bar's x/y values, then augment for the tooltip
var xPosition = parseFloat(d3.select(this).attr("x")) + x.rangeBand() / 2;
var yPosition = parseFloat(d3.select(this).attr("y")) / 2 + height / 2;
 
//Update the tooltip position and value
d3.select("#tooltip")
.style("left", xPosition + "px")
.style("top", yPosition + "px")
.select("#value")
.text((d.communication_skill +d.competency_subject+d.quality_lecture +d.usefulness_topic));
 
d3.select("#alfabet")
.html("Name : "+d.person_name +"<br>"+ "Course Name : "+d.course_name + "<br>"+ "Communication skills : " + (d.communication_skill/d.tr).toFixed(2) +"<br>"+ "Competency Subject : " + (d.competency_subject/d.tr).toFixed(2) +"<br>"+ "Quality Lecture : " + (d.quality_lecture/d.tr).toFixed(2) +"<br>"+ "Usefulness Topic : " + (d.usefulness_topic/d.tr).toFixed(2)  );
 

//Show the tooltip
d3.select("#tooltip").classed("hidden", false);
})
 
.on("mouseout", function() {
d3.select(this)

.attr("fill", function(d) { return "rgb(" + Math.round(d.frequency * 1000) + ",10, 100)"; })
 
//Hide the tooltip
d3.select("#tooltip").classed("hidden", true);
 
})


  d3.select("input").on("change", change);

  var sortTimeout = setTimeout(function() {
    d3.select("input").property("checked", true).each(change);
  }, 500);

  function change() {
    clearTimeout(sortTimeout);

    // Copy-on-write since tweens are evaluated after a delay.
    var x0 = x.domain(data.sort(this.checked
        ? function(a, b) { return ((b.communication_skill +b.competency_subject+b.quality_lecture +b.usefulness_topic)/(b.tr*4)) - ((a.communication_skill +a.competency_subject+a.quality_lecture +a.usefulness_topic)/(a.tr*4)); }
        : function(a, b) { return d3.ascending(a.person_name, b.person_name); })
        .map(function(d) { return d.person_name; }))
        .copy();

    svg.selectAll(".bar")
        .sort(function(a, b) { return x0(a.person_name) - x0(b.person_name); });

    var transition = svg.transition().duration(750),
        delay = function(d, i) { return i * 50; };

    transition.selectAll(".bar")
        .delay(delay)
        .attr("x", function(d) { return x0(d.person_name); });

    transition.select(".x.axis")
        .call(xAxis)
      .selectAll("g")
        .delay(delay);
  }


});

</script>
<body><div id="tooltip">

<span id="alfabet" style='line-height:3em; font:1em sans-serif;'></span>
<p><span id="value"></span></p>
</div></body>
